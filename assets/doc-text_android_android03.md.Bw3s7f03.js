import{_ as e,c as r,a2 as o,o as l}from"./chunks/framework.3VuPyQdv.js";const d="/docs-demo/androidImages/main-window_2-2_2x.png",n="/docs-demo/androidImages/window-icon_2-1_2x.png",a="/docs-demo/androidImages/code-before-formatting_2-1_2x.png",i="/docs-demo/androidImages/code-after-formatting_2-1_2x.png",s="/docs-demo/androidImages/developer-workflow_2x.png",b=JSON.parse('{"title":"了解 Android Studio 界面","description":"","frontmatter":{},"headers":[],"relativePath":"doc-text/android/android03.md","filePath":"doc-text/android/android03.md","lastUpdated":1744815719000}'),g={name:"doc-text/android/android03.md"};function p(h,t,c,f,u,m){return l(),r("div",null,t[0]||(t[0]=[o('<h1 id="了解-android-studio-界面" tabindex="-1">了解 Android Studio 界面 <a class="header-anchor" href="#了解-android-studio-界面" aria-label="Permalink to &quot;了解 Android Studio 界面&quot;">​</a></h1><p>Android Studio 主窗口由图 1 中标注的几个逻辑区域组成。</p><p><img src="'+d+'" alt=""></p><p><strong>图 1.</strong> Android Studio 主窗口。</p><ol><li><p><strong>工具栏</strong>：执行各种操作，其中包括运行应用和启动 Android 工具。</p></li><li><p><strong>导航栏</strong>：在项目中导航，以及打开文件进行修改。此区域提供 <strong>Project</strong> 窗口中所示结构的精简视图。</p></li><li><p><strong>编辑器窗口</strong>：创建和修改代码。编辑器可能因当前文件类型而异。例如，查看布局文件时，该编辑器会显示布局编辑器。</p></li><li><p><strong>工具窗口栏</strong>：使用 IDE 窗口外部的按钮可展开或收起各个工具窗口。</p></li><li><p><strong>工具窗口</strong>：执行特定任务，例如项目管理、搜索和版本控制等。您可以展开和折叠这些窗口。</p></li><li><p><strong>状态栏</strong>：显示项目和 IDE 本身的状态以及任何警告或消息。</p></li></ol><p>您可以隐藏或移动工具栏和工具窗口，以此调整主窗口，腾出更多屏幕空间。您还可以通过<a href="https://developer.android.google.cn/studio/intro/keyboard-shortcuts?hl=zh-cn" target="_blank" rel="noreferrer">键盘快捷键</a>使用大多数 IDE 功能。</p><p>如需在源代码、数据库、操作、界面元素等对象中搜索，请执行以下操作之一：</p><ul><li><p>连按两次 Shift 键。</p></li><li><p>点击 Android Studio 窗口右上角的放大镜。</p></li></ul><p>此功能非常实用，例如在您忘记如何触发特定 IDE 操作时，可以利用此功能进行查找。</p><h2 id="工具窗口" tabindex="-1">工具窗口 <a class="header-anchor" href="#工具窗口" aria-label="Permalink to &quot;工具窗口&quot;">​</a></h2><p>Android Studio 不使用预设窗口，而是根据情境在您执行操作时自动显示相关工具窗口。默认情况下，最常用的工具窗口会固定在应用窗口边缘的工具窗口栏上。</p><p>使用以下方法在工具窗口中导航：</p><ul><li><p>如需展开或收起工具窗口，请在工具窗口栏中点击该工具的名称。您还可以拖动、固定、取消固定、关联和分离工具窗口。</p></li><li><p>若要恢复当前工具窗口的默认布局，请依次点击 <strong>Window &gt; Restore Default Layout</strong>。若要自定义默认布局，请依次点击 <strong>Window &gt; Store Current Layout as Default</strong>。</p></li><li><p>如需显示或隐藏整个工具窗口栏，请点击 Android Studio 窗口左下角的窗口图标! <img src="'+n+'" alt="">。</p></li><li><p>如需找到特定工具窗口，请将鼠标指针悬停在窗口图标上方，并从菜单中选择相应的工具窗口。</p></li></ul><p>您也可以使用<a href="https://developer.android.google.cn/studio/intro/keyboard-shortcuts?hl=zh-cn" target="_blank" rel="noreferrer">键盘快捷键</a>打开工具窗口。表 1 列出了最常用工具窗口的快捷键。</p><p><strong>表 1.</strong> 工具窗口的键盘快捷键</p><table tabindex="0"><thead><tr><th style="text-align:left;">工具窗口</th><th style="text-align:left;">Windows 和 Linux</th><th style="text-align:left;">macOS</th></tr></thead><tbody><tr><td style="text-align:left;">项目</td><td style="text-align:left;">Alt+1</td><td style="text-align:left;">Command+1</td></tr><tr><td style="text-align:left;">版本控制</td><td style="text-align:left;">Alt+9</td><td style="text-align:left;">Command+9</td></tr><tr><td style="text-align:left;">运行</td><td style="text-align:left;">Shift+F10</td><td style="text-align:left;">Ctrl+R</td></tr><tr><td style="text-align:left;">调试</td><td style="text-align:left;">Shift+F9</td><td style="text-align:left;">Ctrl+D</td></tr><tr><td style="text-align:left;">Logcat</td><td style="text-align:left;">Alt+6</td><td style="text-align:left;">Command+6</td></tr><tr><td style="text-align:left;">返回编辑器</td><td style="text-align:left;">Esc</td><td style="text-align:left;">Esc</td></tr><tr><td style="text-align:left;">隐藏所有工具窗口</td><td style="text-align:left;">Ctrl+Shift+F12</td><td style="text-align:left;">Command+Shift+F12</td></tr></tbody></table><p>若要隐藏所有工具栏、工具窗口和编辑器标签页，请依次点击 <strong>View &gt; Enter Distraction Free Mode</strong>。如需退出 Distraction Free Mode，请依次点击 <strong>View &gt; Exit Distraction Free Mode</strong>。</p><p>您可以使用“快速搜索”在 Android Studio 中的大多数工具窗口中执行搜索和过滤。<em>如需使用“快速搜索”，请选择工具窗口，然后输入您的搜索查询。</em></p><h2 id="代码补全" tabindex="-1">代码补全 <a class="header-anchor" href="#代码补全" aria-label="Permalink to &quot;代码补全&quot;">​</a></h2><p>Android Studio 有三种代码补全类型，您可以通过键盘快捷键使用这些类型。</p><p><strong>表 2.</strong> 代码补全功能的键盘快捷键</p><table tabindex="0"><thead><tr><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th><th style="text-align:left;">Windows 和 Linux</th><th style="text-align:left;">macOS</th></tr></thead><tbody><tr><td style="text-align:left;">基本补全</td><td style="text-align:left;">显示对变量、类型、方法和表达式等的基本建议。如果连续两次调用基本补全，系统将显示更多结果，包括私有成员和非导入静态成员。</td><td style="text-align:left;">Ctrl+空格键</td><td style="text-align:left;">Ctrl+空格键</td></tr><tr><td style="text-align:left;">智能补全</td><td style="text-align:left;">根据上下文显示相关选项。智能自动补全可识别预期类型和数据流。如果连续两次调用智能自动补全，系统将显示更多结果，包括链。</td><td style="text-align:left;">Ctrl+Shift+空格键</td><td style="text-align:left;">Ctrl+Shift+空格键</td></tr><tr><td style="text-align:left;">语句补全</td><td style="text-align:left;">补全当前语句，添加缺失的圆括号、大括号、花括号和格式等。</td><td style="text-align:left;">Ctrl+Shift+Enter</td><td style="text-align:left;">Command+Shift+Enter</td></tr></tbody></table><p>若要执行快速修复并显示建议的操作，请按 Alt+Enter。</p><h2 id="查找示例代码" tabindex="-1">查找示例代码 <a class="header-anchor" href="#查找示例代码" aria-label="Permalink to &quot;查找示例代码&quot;">​</a></h2><p>Android Studio 中的代码示例浏览器可以帮助您根据项目中当前突出显示的符号查找 Google 提供的优质 Android 示例代码。如需了解详情，请参阅<a href="https://developer.android.google.cn/studio/write/sample-code?hl=zh-cn" target="_blank" rel="noreferrer">查找示例代码</a>。</p><h2 id="导航" tabindex="-1">导航 <a class="header-anchor" href="#导航" aria-label="Permalink to &quot;导航&quot;">​</a></h2><p>以下是一些助您在 Android Studio 中导航的提示。</p><ul><li><p>使用<strong>最近文件</strong>操作可在最近访问过的文件之间切换：</p><p>按 Ctrl+E（在 macOS 中，按 Command+E）可调出<strong>最近文件</strong>操作。默认情况下，系统将选择最后一次访问的文件。在此操作中，您还可以通过左侧列访问任何工具窗口。</p></li><li><p>使用<strong>文件结构</strong>操作可查看当前文件的结构，还可快速前往当前文件的任何部分：</p><p>按 Ctrl+F12（在 macOS 中，按 Command+F12）可调出<strong>文件结构</strong>操作。</p></li><li><p>使用<strong>前往类</strong>操作可搜索并前往项目中的特定类。<strong>前往类</strong>支持复杂的表达式，包括驼峰（让您可使用某元素的驼峰式大小写名称中的大写字母进行搜索）、路径、行导航（让您可前往文件内的特定行）和中间名匹配（让您可搜索类名称的一部分）等。<em>如果连续两次调用此操作，系统将显示项目类以外的结果。</em></p><p>按 Ctrl+N（在 macOS 中，按 Command+O）可调出<strong>前往类</strong>操作。</p></li><li><p>使用<strong>前往文件</strong>操作可前往文件或文件夹：</p><p>按 Ctrl+Shift+N（在 macOS 中，按 Command+Shift+O）可调出<strong>前往文件</strong>操作。如需搜索文件夹（而不是文件），请在表达式末尾添加“/”。</p></li><li><p>使用<strong>前往符号</strong>操作可按名称前往某个方法或字段：</p><p>按 Ctrl+Shift+Alt+N（在 macOS 中，按 Command+Option+O）可调出<strong>前往符号</strong>操作。</p></li><li><p>按 Alt+F7（在 macOS 中，按 Option+F7）可查找引用当前光标位置处的类、方法、字段、参数或语句的所有代码片段。</p></li></ul><h2 id="样式和格式" tabindex="-1">样式和格式 <a class="header-anchor" href="#样式和格式" aria-label="Permalink to &quot;样式和格式&quot;">​</a></h2><p>在您编辑时，Android Studio 会自动应用代码样式设置中指定的格式和样式。您可以通过编程语言自定义代码样式设置，其中包括指定制表符和缩进、空格、换行、花括号以及空白行的规范。</p><p>如需自定义代码样式设置，请依次点击 <strong>File &gt; Settings &gt; Editor &gt; Code Style</strong>（在 macOS 中，请依次点击 <strong>Android Studio &gt; Preferences &gt; Editor &gt; Code Style</strong>）。</p><p>虽然 IDE 会在您执行操作时自动应用格式，但您也可以显式调用<strong>重新格式化代码</strong>操作。按 Ctrl+Alt+L（在 macOS 中，按 Option+Command+L）可调用此操作。按 Ctrl+Alt+I（在 macOS 中，按 Ctrl+Option+I）可自动缩进所有行。</p><p><img src="'+a+'" alt="img"></p><p><strong>图 2.</strong> 格式化前的代码。</p><p><img src="'+i+'" alt="img"></p><p><strong>图 3.</strong> 格式化后的代码。</p><h2 id="开发者工作流程基础知识" tabindex="-1">开发者工作流程基础知识 <a class="header-anchor" href="#开发者工作流程基础知识" aria-label="Permalink to &quot;开发者工作流程基础知识&quot;">​</a></h2><p>从概念上来讲，Android 应用的开发工作流程与其他应用平台相同。不过，如果想高效地构建精心设计的 Android 应用，您需要用到一些专业工具。</p><p>本页将概述 Android 应用构建流程，并提供链接以便您详细了解各个开发阶段需使用的 Android Studio 工具。</p><p><img src="'+s+'" alt="img"></p><ol><li><p><strong>设置工作区</strong></p><p>这是 Android 应用开发流程的第一步。如需了解详情，请参阅 <a href="https://developer.android.google.cn/studio?hl=zh-cn" target="_blank" rel="noreferrer">Android Studio 安装页面</a>和<a href="https://developer.android.google.cn/studio/projects/create-project?hl=zh-cn" target="_blank" rel="noreferrer">创建项目</a>指南。</p><p>您可在<a href="https://developer.android.google.cn/training/basics/firstapp?hl=zh-cn" target="_blank" rel="noreferrer">构建首个 Android 应用</a>指南中查看 Android Studio 演示并学习一些 Android 开发基础知识。</p></li><li><p><strong>编写应用</strong></p><p>设置完工作区之后，您就可以开始编写应用了。Android Studio 包含多种工具和智能功能，可帮助您更快速地编写应用、编写优质代码、设计界面以及为不同的设备类型创建资源。如需详细了解可用的工具和功能，请参阅<a href="https://developer.android.google.cn/studio/write?hl=zh-cn" target="_blank" rel="noreferrer">编写应用</a>。</p></li><li><p><strong>构建和运行</strong></p><p>在构建和运行阶段，您可将项目构建为一个可调试的 APK 软件包，以便在模拟器或 Android 设备上安装和运行。如需详细了解如何运行代码，请参阅<a href="https://developer.android.google.cn/studio/run?hl=zh-cn" target="_blank" rel="noreferrer">构建和运行应用</a>。</p><p>您还可在此阶段自定义 build。例如，您可以<a href="https://developer.android.google.cn/studio/build/build-variants?hl=zh-cn" target="_blank" rel="noreferrer">创建 build 变体</a>，从同一项目生成不同版本的应用，并<a href="https://developer.android.google.cn/studio/build/shrink-code?hl=zh-cn" target="_blank" rel="noreferrer">缩减代码和资源</a>以缩小应用。有关自定义 build 配置的介绍，请参阅<a href="https://developer.android.google.cn/studio/build?hl=zh-cn" target="_blank" rel="noreferrer">配置 build</a>。</p></li><li><p><strong>执行调试、性能分析和测试</strong></p><p>在此迭代阶段，您可以继续开发应用，同时消除 bug 并优化应用性能。如需在调试和优化应用方面获取帮助，请<a href="https://developer.android.google.cn/studio/test/test-in-android-studio?hl=zh-cn" target="_blank" rel="noreferrer">在 Android Studio 中测试应用</a>。</p><p>如需详细了解调试，请参阅<a href="https://developer.android.google.cn/studio/debug?hl=zh-cn" target="_blank" rel="noreferrer">调试应用</a>以及<a href="https://developer.android.google.cn/studio/debug/am-logcat?hl=zh-cn" target="_blank" rel="noreferrer">使用 Logcat 编写和查看日志</a>。</p><p>如需查看和分析各种性能指标（比如内存用量、网络流量、CPU 影响等等），请参阅<a href="https://developer.android.google.cn/studio/profile?hl=zh-cn" target="_blank" rel="noreferrer">分析应用性能</a>。</p></li><li><p><strong>发布</strong></p><p>为了准备好应用以面向用户发布，您需要构建一个 <a href="https://developer.android.google.cn/guide/app-bundle?hl=zh-cn" target="_blank" rel="noreferrer">Android App Bundle</a>，使用安全密钥为其签名，然后做好准备以发布到 Google Play 商店。如需了解详情，请参阅<a href="https://developer.android.google.cn/studio/publish?hl=zh-cn" target="_blank" rel="noreferrer">发布应用</a>。</p></li></ol>',41)]))}const y=e(g,[["render",p]]);export{b as __pageData,y as default};
