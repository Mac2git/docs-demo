import{_ as i,c as a,a2 as n,o as t}from"./chunks/framework.3VuPyQdv.js";const l="/docs-demo/PythonImages/IPO%E7%BC%96%E7%A8%8B%E6%96%B9%E6%B3%95.png",e="/docs-demo/PythonImages/print.png",p="/docs-demo/assets/end.BmHujN_Y.png",h="/docs-demo/PythonImages/sep.png",r="/docs-demo/PythonImages/print%E5%87%BD%E6%95%B0%E5%BE%80%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5%E5%86%85%E5%AE%B9.png",b=JSON.parse('{"title":"为什么要学习Python","description":"","frontmatter":{},"headers":[],"relativePath":"doc-text/python/开始学习Python.md","filePath":"doc-text/python/开始学习Python.md","lastUpdated":1754641264000}'),k={name:"doc-text/python/开始学习Python.md"};function o(d,s,E,y,g,c){return t(),a("div",null,s[0]||(s[0]=[n('<h1 id="为什么要学习python" tabindex="-1">为什么要学习Python <a class="header-anchor" href="#为什么要学习python" aria-label="Permalink to &quot;为什么要学习Python&quot;">​</a></h1><p>Python 是当今非常流行的编程语言，在互联网上经常可以看到他的身影。它应用非常广泛，例如编程、Web 开发、机器学习和数据科学等。在最新的tiobe排行中 Python 甚至超越了 Java 成为顶级编程语言。</p><h2 id="首先我们先了解下什么是-python" tabindex="-1">首先我们先了解下什么是 Python ？ <a class="header-anchor" href="#首先我们先了解下什么是-python" aria-label="Permalink to &quot;首先我们先了解下什么是 Python ？&quot;">​</a></h2><p>Python 是一种高级的、面向对象的编程语言，具有内置的数据结构和动态语义。它支持多种编程范式，例如结构、面向对象和函数式编程。</p><p>Python 支持不同的模块和包，这允许程序模块化和代码重用。</p><p>Python 由 Guido van Rossum 创建。</p><h2 id="python-的优点" tabindex="-1">Python 的优点： <a class="header-anchor" href="#python-的优点" aria-label="Permalink to &quot;Python 的优点：&quot;">​</a></h2><ol><li>易学易用：Python 的语法非常清晰，代码可读性高，使得开发者可以快速上手并开始编写代码。</li><li>强大的标准库：Python 自带丰富的标准库，可以帮助开发者快速完成各种任务，无需重复造轮子。</li><li>第三方库：Python 拥有庞大的第三方库，可以满足绝大多数开发需求。</li><li>跨平台：Python 可以在多种操作系统上运行，包括 Windows、Linux、MacOS 等。</li><li>面向对象编程：Python 支持面向对象编程，允许开发者使用类和对象来组织代码。</li><li>动态类型：Python 是一种动态类型语言，不需要预先声明变量的类型即可使用。</li><li>解释性：Python 是解释型语言，可以直接运行 Python 代码，不需要编译步骤。</li><li>可嵌入性：Python 可以被嵌入到 C 或者 C++ 程序中，实现扩展程序的功能。</li></ol><h2 id="python-的缺点" tabindex="-1">Python 的缺点： <a class="header-anchor" href="#python-的缺点" aria-label="Permalink to &quot;Python 的缺点：&quot;">​</a></h2><ol><li>运行速度：Python 是解释型语言，执行效率通常低于编译型语言如 C 或 C++。</li><li>移动计算和游戏开发：Python 在这些对性能要求高的领域速度较慢，可能不适合。</li><li>GIL(Global Interpreter Lock)：Python 有一个全局解释器锁(GIL)，在多线程处理任务时可能会出现性能问题。</li><li>代码执行安全性：Python 缺乏严格的类型检查，可能导致在运行时出现意外行为。</li><li>管理开销：Python 程序通常比编译型语言的程序占用更多的内存。</li></ol><h2 id="python的发展历程" tabindex="-1">Python的发展历程 <a class="header-anchor" href="#python的发展历程" aria-label="Permalink to &quot;Python的发展历程&quot;">​</a></h2><p>Python由<a href="https://baike.baidu.com/item/%E8%8D%B7%E5%85%B0%E5%9B%BD%E5%AE%B6%E6%95%B0%E5%AD%A6%E4%B8%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E7%A0%94%E7%A9%B6%E4%B8%AD%E5%BF%83/53889845?fromModule=lemma_inlink" target="_blank" rel="noreferrer">荷兰国家数学与计算机科学研究中心</a>的<a href="https://baike.baidu.com/item/%E5%90%89%E5%A4%9A%C2%B7%E8%8C%83%E7%BD%97%E8%8B%8F%E5%A7%86/328361?fromModule=lemma_inlink" target="_blank" rel="noreferrer">吉多·范罗苏姆</a>于1990年代初设计，作为一门叫作<a href="https://baike.baidu.com/item/ABC%E8%AF%AD%E8%A8%80/334996?fromModule=lemma_inlink" target="_blank" rel="noreferrer">ABC语言</a>的替代品。Python提供了高效的高级<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/1450?fromModule=lemma_inlink" target="_blank" rel="noreferrer">数据结构</a>，还能简单有效地<a href="https://baike.baidu.com/item/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/2262089?fromModule=lemma_inlink" target="_blank" rel="noreferrer">面向对象</a>编程。Python语法和动态类型，以及<a href="https://baike.baidu.com/item/%E8%A7%A3%E9%87%8A%E5%9E%8B%E8%AF%AD%E8%A8%80/8888952?fromModule=lemma_inlink" target="_blank" rel="noreferrer">解释型语言</a>的本质，使它成为多数平台上写脚本和快速开发应用的<a href="https://baike.baidu.com/item/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/9845131?fromModule=lemma_inlink" target="_blank" rel="noreferrer">编程语言</a>，随着版本的不断更新和语言新功能的添加，逐渐被用于独立的、大型项目的开发。</p><p>Python在各个编程语言中比较适合新手学习，Python解释器易于扩展，可以使用<a href="https://baike.baidu.com/item/C/7252092?fromModule=lemma_inlink" target="_blank" rel="noreferrer">C</a>、<a href="https://baike.baidu.com/item/C%2B%2B/99272?fromModule=lemma_inlink" target="_blank" rel="noreferrer">C++</a>或其他可以通过C调用的语言扩展新的功能和<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/10997964?fromModule=lemma_inlink" target="_blank" rel="noreferrer">数据类型</a>。Python也可用于可定制化软件中的扩展程序语言。Python丰富的标准库，提供了适用于各个主要系统平台的<a href="https://baike.baidu.com/item/%E6%BA%90%E7%A0%81/344212?fromModule=lemma_inlink" target="_blank" rel="noreferrer">源码</a>或<a href="https://baike.baidu.com/item/%E6%9C%BA%E5%99%A8%E7%A0%81/86125?fromModule=lemma_inlink" target="_blank" rel="noreferrer">机器码</a>。</p><h2 id="python版本" tabindex="-1">Python版本 <a class="header-anchor" href="#python版本" aria-label="Permalink to &quot;Python版本&quot;">​</a></h2><ol><li>Python 3.x 默认使用 UTF-8编码</li><li>print()函数代替print语句</li><li>完全面向对象</li><li>用视图和迭代器代替了列表</li><li>比较运算符中的改变 <ol><li>用 != 代替 &lt;&gt;</li><li>比较运算 &lt;，&lt;=，&gt;=和 &gt; 无法比较两个数据大小顺序时，会产生 TypeError 异常。</li><li>在 Python 2.x 中，1&lt;&quot;、0&gt;None,len&lt;=len 等运算返回 False，而在 Python 3.x中则产生 TypeError 异常。</li><li>在 = 和 != 中，不兼容类型的数据视为不相等。</li></ol></li></ol><h1 id="下载-python" tabindex="-1">下载 Python <a class="header-anchor" href="#下载-python" aria-label="Permalink to &quot;下载 Python&quot;">​</a></h1><ol><li>‌<strong>下载Python</strong>‌：</li></ol><ul><li>打开Python官网（<a href="https://www.python.org/downloads/%EF%BC%89%E3%80%82%E2%80%8C1" target="_blank" rel="noreferrer">https://www.python.org/downloads/）。‌1</a></li><li>根据操作系统选择对应的Python安装程序。例如，Windows用户应选择Windows Installer。‌2</li><li>选择合适的Python版本进行下载，通常推荐下载稳定发布版本（Stable Releases）。</li></ul><ol><li>‌<strong>安装Python</strong>‌：</li></ol><ul><li>找到下载的安装文件并双击运行。‌3</li><li>在安装过程中，可以勾选“Add Python to PATH”选项，以便在命令提示符中直接运行Python命令。</li><li>选择“Customize installation”进行自定义安装，可以根据需求选择安装组件和设置安装路径。‌14</li><li>点击“Install”开始安装，并等待安装完成。‌4</li></ul><ol><li>‌<strong>验证安装</strong>‌：</li></ol><ul><li>安装完成后，可以通过打开命令提示符（CMD）并输入“python”来验证Python是否已成功安装。‌5</li><li>如果成功安装，将显示Python的版本信息和提示符，可以输入Python代码并回车执行。</li><li>若要退出Python交互式环境，可以输入“exit()”并回车。</li></ul><p>请注意，如果在安装过程中没有勾选“Add Python to PATH”选项，可能需要手动配置Python的环境变量。此外，如果在安装或使用过程中遇到问题，可以参考Python官网的文档或搜索相关教程进行解决。</p><h1 id="python的两种编程方式" tabindex="-1"><strong>Python的两种编程方式</strong> <a class="header-anchor" href="#python的两种编程方式" aria-label="Permalink to &quot;**Python的两种编程方式**&quot;">​</a></h1><p>交互式和文件式</p><p>交互式：对每个输入语句即时运行结果，适合语法练习</p><p>文件式：批量执行一组语句，并运行结果，编程的主要方式</p><h1 id="ipo程序编写方法" tabindex="-1">IPO程序编写方法 <a class="header-anchor" href="#ipo程序编写方法" aria-label="Permalink to &quot;IPO程序编写方法&quot;">​</a></h1><p>IPO,全写Input-Process-Output,翻译成汉语就是“输入-处理-输出”这个程序结构非常实用。</p><p><img src="'+l+`" alt=""></p><h1 id="python第一个程序" tabindex="-1">python第一个程序 <a class="header-anchor" href="#python第一个程序" aria-label="Permalink to &quot;python第一个程序&quot;">​</a></h1><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果显示 hello world 代表安装成功</p><h1 id="print函数" tabindex="-1">print函数 <a class="header-anchor" href="#print函数" aria-label="Permalink to &quot;print函数&quot;">​</a></h1><p>print函数是一个输出函数，输出格式为：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">输出值1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">输出值2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">输出值n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sep</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;,&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>例：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello world&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;&#39;hello world&#39;&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;hello world&quot;&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>结果：</p><p><img src="`+e+`" alt=""></p><p>因为print函数默认有换行，我们想不让他换行可以这样做</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;&#39;hello world&#39;&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;---&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;hello world&quot;&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="`+p+'" alt=""></p><p>只要加入end就不默认换行了</p><p>如果我们想要一行输出多个</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>但python会把逗号转成空格，但我们加上 sep就不会加空格了</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sep</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+h+`" alt=""></p><p>使用print函数写入文件文字</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># coding=UTF-8 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#设置文件的编码格式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;note.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;w&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打开文件,如果没有创建文件 w--&gt;write</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;重生之我来学Python&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fp) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将重生之我来学Python，输出(写入)到note.txt 文件中</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fp.close() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#关闭文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>运行，来查看效果图</p><img src="`+r+`" style="zoom:60%;"><h1 id="input函数" tabindex="-1">input函数 <a class="header-anchor" href="#input函数" aria-label="Permalink to &quot;input函数&quot;">​</a></h1><p><strong>语法结构：</strong></p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;提示文字&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>注意事项：</p><p>​ 无论输入的数据是什么，x的数据类型都是字符串类型</p></blockquote><p>使用input函数输入整数：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">num </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;请输入您的幸运数字：&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;您的幸运数字是&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,num)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>print函数不能使用加号连接，因为 num 不是字符串，而是整数。</strong></p><h1 id="python语法" tabindex="-1">Python语法 <a class="header-anchor" href="#python语法" aria-label="Permalink to &quot;Python语法&quot;">​</a></h1><p><strong>Python中的注释</strong></p><ol><li>程序员在代码中对代码功能解释说明的标注性文字</li><li>可以提高代码的可读性</li><li>注释的内容将被Python解释忽略，不被计算机执行。</li><li>单行注释，多行注释和中文声明注释。</li></ol><h2 id="单行注释" tabindex="-1">单行注释 <a class="header-anchor" href="#单行注释" aria-label="Permalink to &quot;单行注释&quot;">​</a></h2><p>以 # 开头为单行注释</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 我是单行注释</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="多行注释" tabindex="-1">多行注释 <a class="header-anchor" href="#多行注释" aria-label="Permalink to &quot;多行注释&quot;">​</a></h2><p>Python并没有独立的多行注释，只要被包含在一对儿三引号当中的代码，实际上就一个多行注释，多行注释它本质上就是一个字符串</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    这是多行注释</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="中文文档说明注释" tabindex="-1">中文文档说明注释 <a class="header-anchor" href="#中文文档说明注释" aria-label="Permalink to &quot;中文文档说明注释&quot;">​</a></h2><p>中文文档注释是因为Python它是有编码格式的，如果编码格式不正确的话就会出现问题，那么咋么样去设置他呢？</p><p><strong>中文文档声明注释，一定要写在第一行</strong></p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># coding = UTF-8</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这样文件就是编码格式就是 UTF-8格式了</p><p>Python文件的编码格式是什么，是由第一行代码决定的，第一行代码叫做中文文档声明注释。</p><h1 id="代码缩进" tabindex="-1">代码缩进 <a class="header-anchor" href="#代码缩进" aria-label="Permalink to &quot;代码缩进&quot;">​</a></h1><p>是指每行语句开始前的空白区域。</p><p>是用来表示Python程序键的包含和层次关系。</p><p>类定义、函数定义、流程控制语句以及异常处理语句等行尾的<strong>冒号</strong>和<strong>下一行的缩进</strong>表示一个代码块的开始，而缩进结束，则表示一个代码块的结束。</p><p>通常情况下采用4个空格作为一个缩进量。</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 一般代码，不需要缩进</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 类的定义</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Student</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    pass</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 函数的定义</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fun</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    pass</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h1 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h1><p>程序设计语言又被称为编程语言</p><p>计算机程序是使用编程语言组织起来的一组计算机指令</p><p>计算机指令就是指挥机器工作的指示和命令</p><p>编程语言可分为机器语言、汇编语言和高级语言</p><p>采用编译方式执行的语言称静态语言</p><p>例：Java语言，C语言 ......</p><p>采用解释方式执行的语言成为脚本语言</p><p>例：Python，html ......</p><p>IPO指的是输入、处理和输出</p><p>print 函数完整的语言格式为：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(value,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sep</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>输入函数 input 的语言为：variable=input(&#39;提示文字&#39;)</p><p>Python中的注释可分为单行注释、多行注释和中文文档声明注释</p><p>Python语言采用严格的 &quot;缩进&quot; 来表示程序逻辑</p>`,96)]))}const m=i(k,[["render",o]]);export{b as __pageData,m as default};
