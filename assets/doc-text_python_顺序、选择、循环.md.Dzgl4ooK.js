import{_ as t,c as h,j as p,a as i,G as n,w as l,a2 as e,B as k,o as r}from"./chunks/framework.3VuPyQdv.js";const d="/docs-demo/PythonImages/%E7%A8%8B%E5%BA%8F%E7%9A%84%E8%A1%A8%E7%A4%BA%E6%96%B9%E5%BC%8F.png",E="/docs-demo/PythonImages/%E6%B5%81%E7%A8%8B%E5%9B%BE%E7%9A%84%E6%A6%82%E8%BF%B0.png",o="/docs-demo/PythonImages/%E6%B5%81%E7%A8%8B%E5%9B%BE.png",g="/docs-demo/PythonImages/%E4%B8%89%E7%A7%8D%E7%BB%93%E6%9E%84.png",A=JSON.parse('{"title":"程序的表示方式","description":"","frontmatter":{},"headers":[],"relativePath":"doc-text/python/顺序、选择、循环.md","filePath":"doc-text/python/顺序、选择、循环.md","lastUpdated":1752573283000}'),y={name:"doc-text/python/顺序、选择、循环.md"};function u(b,s,m,F,c,C){const a=k("font");return r(),h("div",null,[s[14]||(s[14]=p("h1",{id:"程序的表示方式",tabindex:"-1"},[i("程序的表示方式 "),p("a",{class:"header-anchor",href:"#程序的表示方式","aria-label":'Permalink to "程序的表示方式"'},"​")],-1)),n(a,{color:"purple",size:"5px"},{default:l(()=>s[0]||(s[0]=[i("自然语言")])),_:1}),s[15]||(s[15]=i("就是使用人类语言、直接描述程序。")),s[16]||(s[16]=p("p",null,[p("img",{src:d,alt:""})],-1)),n(a,{color:"purple",size:"5px"},{default:l(()=>s[1]||(s[1]=[i("流程图")])),_:1}),s[17]||(s[17]=e('是用一系列图形，流程线和文字说明描述程序的基本操作和控制流程，主要适用于较短的算法。<img src="'+E+'" style="zoom:75%;"><img src="'+o+'" style="zoom:60%;"><h1 id="顺序结构" tabindex="-1">顺序结构 <a class="header-anchor" href="#顺序结构" aria-label="Permalink to &quot;顺序结构&quot;">​</a></h1><img src="'+g+'" style="zoom:60%;">',5)),n(a,{color:"purple",size:"5px"},{default:l(()=>s[2]||(s[2]=[i("顺序结构")])),_:1}),s[18]||(s[18]=e(`按程序语句的自然顺序，从上到下，依次执行每条语句。<p>例：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 赋值运算符的顺序，从左到右</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;张三&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a,b,c,d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;room&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 字符串分解赋值 会把 r 给 a,o 给 b,o 给 c ....</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h1 id="选择结构" tabindex="-1">选择结构 <a class="header-anchor" href="#选择结构" aria-label="Permalink to &quot;选择结构&quot;">​</a></h1>`,4)),n(a,{color:"purple",size:"5px"},{default:l(()=>s[3]||(s[3]=[i("选择结构")])),_:1}),s[19]||(s[19]=e(`也称分支结构，是按照条件选择执行不同的代码段。<h2 id="单分支结构-if-的语法结构" tabindex="-1">单分支结构 if 的语法结构： <a class="header-anchor" href="#单分支结构-if-的语法结构" aria-label="Permalink to &quot;单分支结构 if 的语法结构：&quot;">​</a></h2><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表达式:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     语句块</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,3)),n(a,{color:"purple",size:"5px"},{default:l(()=>s[4]||(s[4]=[i("执行流程：")])),_:1}),p("p",null,[s[7]||(s[7]=i("如果表达式的值为 ")),n(a,{color:"red"},{default:l(()=>s[5]||(s[5]=[i("True")])),_:1}),s[8]||(s[8]=i("，就执行语句块，如果表达式的值为 ")),n(a,{color:"red"},{default:l(()=>s[6]||(s[6]=[i("False")])),_:1}),s[9]||(s[9]=i("，就跳过语句块，继续执行后面的代码。"))]),s[20]||(s[20]=e(`<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">eval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;请输入您的六位中奖号码：&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 if 语句</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 123456</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 等值判断</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;恭喜您，中奖了！&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 123456</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;很遗憾，您未中奖！&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>⚠️0的布尔值是 False，而非 0 的布尔值 是 True</p><p>⚠️空字符串的布尔值为 False</p><p><strong>⚠️使用 if 语句时，如果语句块中只有一句代码，可以将语句块直接写在冒号的后面。</strong></p><h2 id="双分支结构-if-else-语法结构" tabindex="-1">双分支结构 if....else.... 语法结构 <a class="header-anchor" href="#双分支结构-if-else-语法结构" aria-label="Permalink to &quot;双分支结构 if....else.... 语法结构&quot;">​</a></h2><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表达式:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     语句1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     语句2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,6)),n(a,{color:"purple",size:"5px"},{default:l(()=>s[10]||(s[10]=[i("执行流程：")])),_:1}),p("p",null,[s[12]||(s[12]=i("如果表达式的值为 ")),n(a,{color:"red"},{default:l(()=>s[11]||(s[11]=[i("True")])),_:1}),s[13]||(s[13]=i(",就执行语句1，否则就执行语句2"))]),s[21]||(s[21]=e(`<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">number </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> eval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;请输入您的6位中奖号码：&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;恭喜你，中奖了！&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;很遗憾，未能赢得本次大奖！&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;---以上代码可以使用条件表达式进行简化---&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;恭喜你中奖了！&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123456</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> else</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;您未中本期大奖！&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,1))])}const f=t(y,[["render",u]]);export{A as __pageData,f as default};
