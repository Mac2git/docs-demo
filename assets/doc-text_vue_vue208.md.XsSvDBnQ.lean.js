import{_ as i,c as a,a2 as n,o as t}from"./chunks/framework.3VuPyQdv.js";const l="/docs-demo/vue/vue2Images/vue%E5%9F%BA%E7%A1%80%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.png",e="/docs-demo/vue/vue2Images/ref%E5%BC%95%E7%94%A8%E4%BB%8B%E7%BB%8D.png",h="/docs-demo/vue/vue2Images/ref%E5%BC%95%E7%94%A8%E4%BB%8B%E7%BB%8D2.png",p="/docs-demo/vue/vue2Images/ref%E5%BC%95%E7%94%A8%E4%BB%8B%E7%BB%8D3.png",k="/docs-demo/vue/vue2Images/ref%E5%BC%95%E7%94%A8%E4%BB%8B%E7%BB%8D4.png",r="/docs-demo/vue/vue2Images/ref%E5%BC%95%E7%94%A8%E4%BB%8B%E7%BB%8D5.png",E="/docs-demo/vue/vue2Images/ref%E5%BC%95%E7%94%A8%E4%BB%8B%E7%BB%8D6.png",d="/docs-demo/vue/vue2Images/%E5%8A%A8%E6%80%81%E7%BB%84%E4%BB%B6.png",g="/docs-demo/vue/vue2Images/keep-alive.png",o="/docs-demo/vue/vue2Images/keep-alive%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%87%BD%E6%95%B0.png",c="/docs-demo/vue/vue2Images/keep-alive%E4%B8%AD%E7%9A%84%E5%B1%9E%E6%80%A7include.png",y="/docs-demo/vue/vue2Images/name%E5%B1%9E%E6%80%A7.png",m="/docs-demo/vue/vue2Images/%E6%8F%92%E6%A7%BD1.png",u="/docs-demo/vue/vue2Images/%E6%8F%92%E6%A7%BD2.png",b="/docs-demo/vue/vue2Images/%E6%8F%92%E6%A7%BD3.png",F="/docs-demo/vue/vue2Images/%E6%8F%92%E6%A7%BD4.png",B="/docs-demo/vue/vue2Images/%E6%8F%92%E6%A7%BD5.png",v="/docs-demo/vue/vue2Images/%E6%8F%92%E6%A7%BD6.png",A="/docs-demo/vue/vue2Images/%E6%8F%92%E6%A7%BD7.png",C="/docs-demo/vue/vue2Images/%E6%8F%92%E6%A7%BD8.png",_="/docs-demo/vue/vue2Images/%E6%8F%92%E6%A7%BD9.png",D="/docs-demo/vue/vue2Images/%E6%8F%92%E6%A7%BD10.png",f="/docs-demo/vue/vue2Images/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A41.png",q="/docs-demo/vue/vue2Images/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A42.png",x="/docs-demo/vue/vue2Images/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A43.png",P="/docs-demo/vue/vue2Images/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A44.png",I="/docs-demo/vue/vue2Images/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A45.png",z="/docs-demo/vue/vue2Images/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A46.png",O="/docs-demo/vue/vue2Images/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A47.png",N=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"doc-text/vue/vue208.md","filePath":"doc-text/vue/vue208.md","lastUpdated":1744449952000}'),M={name:"doc-text/vue/vue208.md"};function $(T,s,w,V,Y,j){return t(),a("div",null,s[0]||(s[0]=[n('<h2 id="前面的复习总结思维导图" tabindex="-1"><strong>前面的复习总结思维导图</strong> <a class="header-anchor" href="#前面的复习总结思维导图" aria-label="Permalink to &quot;**前面的复习总结思维导图**&quot;">​</a></h2><p>​</p><p>​ <img src="'+l+'" style="zoom:80%;"></p><h3 id="ref引用" tabindex="-1">ref引用 <a class="header-anchor" href="#ref引用" aria-label="Permalink to &quot;ref引用&quot;">​</a></h3><p>​</p><h4 id="_1-什么是-ref-引用" tabindex="-1">1. 什么是 ref 引用 <a class="header-anchor" href="#_1-什么是-ref-引用" aria-label="Permalink to &quot;1. 什么是 ref 引用&quot;">​</a></h4><p>​ <strong>ref 用来辅助开发者在不依赖于 jQuery 的情况下，获取 DOM 元素或组件的引用。 每个 vue 的组件实例上，都包含一个 $refs 对象，里面存储着对应的 DOM 元素或组件的引用。默认情况下， 组件的 $refs 指向一个空对象。</strong></p><p><img src="'+e+'" alt=""></p><h4 id="_2-使用-ref-引用-dom-元素" tabindex="-1">2. 使用 ref 引用 DOM 元素 <a class="header-anchor" href="#_2-使用-ref-引用-dom-元素" aria-label="Permalink to &quot;2. 使用 ref 引用 DOM 元素&quot;">​</a></h4><p>​ <strong>如果想要使用 ref 引用页面上的 DOM 元素，则可以按照如下的方式进行操作：</strong></p><img src="'+h+'" style="zoom:80%;"><h4 id="_3-使用-ref-引用组件实例" tabindex="-1">3.使用 ref 引用组件实例 <a class="header-anchor" href="#_3-使用-ref-引用组件实例" aria-label="Permalink to &quot;3.使用 ref 引用组件实例&quot;">​</a></h4><p>​ <strong>如果想要使用 ref 引用页面上的组件实例，则可以按照如下的方式进行操作：</strong></p><p>​ <img src="'+p+'" style="zoom:80%;"></p><h4 id="_4-控制文本框和按钮的按需切换" tabindex="-1">4.控制文本框和按钮的按需切换 <a class="header-anchor" href="#_4-控制文本框和按钮的按需切换" aria-label="Permalink to &quot;4.控制文本框和按钮的按需切换&quot;">​</a></h4><p>​ <strong>通过布尔值 inputVisible 来控制组件中的文本框与按钮的按需切换。示例代码如下：</strong></p><p>​ <img src="'+k+'" style="zoom:67%;"></p><h4 id="_5-让文本框自动获得焦点" tabindex="-1">5.让文本框自动获得焦点 <a class="header-anchor" href="#_5-让文本框自动获得焦点" aria-label="Permalink to &quot;5.让文本框自动获得焦点&quot;">​</a></h4><p>​ <strong>当文本框展示出来之后，如果希望它立即获得焦点，则可以为其添加 ref 引用，并调用原生 DOM 对象的 .focus() 方法即可。示例代码如下：</strong></p><p>​ <img src="'+r+'" style="zoom:80%;"></p><h4 id="_6-this-nexttick-cb-方法" tabindex="-1">6.this.$nextTick(cb) 方法 <a class="header-anchor" href="#_6-this-nexttick-cb-方法" aria-label="Permalink to &quot;6.this.$nextTick(cb) 方法&quot;">​</a></h4><p>​ <strong>组件的 $nextTick(cb) 方法，会把 cb 回调推迟到下一个 DOM 更新周期之后执行。通俗的理解是：等组件的 DOM 更新完成之后，再执行 cb 回调函数。从而能保证 cb 回调函数可以操作到最新的 DOM 元素。</strong></p><p>​ <img src="'+E+`" style="zoom:80%;"></p><h3 id="数组中的-some-循环" tabindex="-1">数组中的 some 循环 <a class="header-anchor" href="#数组中的-some-循环" aria-label="Permalink to &quot;数组中的 some 循环&quot;">​</a></h3><h4 id="some和foreach循环对比" tabindex="-1">some和forEach循环对比： <a class="header-anchor" href="#some和foreach循环对比" aria-label="Permalink to &quot;some和forEach循环对比：&quot;">​</a></h4><p>​</p><p>​ <strong>forEach 循环一旦开始，无法在中间被停止，所有的数据都会走一遍,return、break不管用</strong></p><p>​ <strong>some 循环可以通过return true终止循环</strong></p><p>​</p><h5 id="用法示例" tabindex="-1">用法示例： <a class="header-anchor" href="#用法示例" aria-label="Permalink to &quot;用法示例：&quot;">​</a></h5><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;utf-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;小红&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;倪大红&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;苏大强&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;张三&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			arr.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(index)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">				if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;苏大强&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">					console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;苏大强的索引是&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,index)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-------------------&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			arr.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(index)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">				if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;苏大强&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">					console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;苏大强的索引是&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,index)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">					// 在找到对应的项之后，可以通过 return true 固定的语法，来终止 some 循环</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">					return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="数组中的-every-判断" tabindex="-1">数组中的 every 判断 <a class="header-anchor" href="#数组中的-every-判断" aria-label="Permalink to &quot;数组中的 every 判断&quot;">​</a></h3><p>​</p><h4 id="介绍" tabindex="-1">介绍： <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍：&quot;">​</a></h4><p>​ <strong>every 判断数组中的 布尔值是否为true，如果全部为 true，则为true，否则为false</strong></p><h5 id="用法示例-1" tabindex="-1">用法示例： <a class="header-anchor" href="#用法示例-1" aria-label="Permalink to &quot;用法示例：&quot;">​</a></h5><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;!</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DOCTYPE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> html</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> charset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;utf-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			const arr = [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				{ id:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;西瓜&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,state:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				{ id:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;榴莲&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,state:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				{ id:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;草莓&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,state:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			const result = arr.every(item =&gt; item.state)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			console.log(result)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="数组中的-reduce-累加器" tabindex="-1">数组中的 reduce 累加器 <a class="header-anchor" href="#数组中的-reduce-累加器" aria-label="Permalink to &quot;数组中的 reduce 累加器&quot;">​</a></h3><h4 id="语法" tabindex="-1">语法： <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法：&quot;">​</a></h4><p>​ <strong>数组.reduce( (累加的结果,当前的循环项) =&gt; {},初始值)</strong></p><h5 id="用法示例-2" tabindex="-1">用法示例： <a class="header-anchor" href="#用法示例-2" aria-label="Permalink to &quot;用法示例：&quot;">​</a></h5><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;utf-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">               //需求：把 arr 数组中的布尔值为 state为：true，根据数量计算总价</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				{ id:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;西瓜&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,state:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,price:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,count:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				{ id:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;榴莲&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,state:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,price:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,count:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				{ id:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;草莓&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,state:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,price:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,count:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arr.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item.state).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reduce</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">amt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">				return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> amt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item.price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item.count</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			},</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h6 id="reduce-简化写法" tabindex="-1">reduce 简化写法： <a class="header-anchor" href="#reduce-简化写法" aria-label="Permalink to &quot;reduce 简化写法：&quot;">​</a></h6><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;utf-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				{ id:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;西瓜&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,state:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,price:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,count:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				{ id:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;榴莲&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,state:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,price:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,count:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				{ id:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;草莓&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,state:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,price:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,count:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arr.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item.state).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reduce</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">amt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> amt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item.price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item.count,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result2)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="动态组件" tabindex="-1">动态组件 <a class="header-anchor" href="#动态组件" aria-label="Permalink to &quot;动态组件&quot;">​</a></h3><h4 id="_1-什么是动态组件" tabindex="-1">1. 什么是动态组件 <a class="header-anchor" href="#_1-什么是动态组件" aria-label="Permalink to &quot;1. 什么是动态组件&quot;">​</a></h4><p>​ <strong>动态组件指的是动态切换组件的显示与隐藏。</strong></p><h4 id="_2-如何实现动态组件渲染" tabindex="-1">2.如何实现动态组件渲染 <a class="header-anchor" href="#_2-如何实现动态组件渲染" aria-label="Permalink to &quot;2.如何实现动态组件渲染&quot;">​</a></h4><p>​ <strong>vue 提供了一个内置的 组件，专门用来实现动态组件的渲染。示例代码如下：</strong></p><p>​ <img src="`+d+'" style="zoom:80%;"></p><h4 id="_3-使用-keep-alive-保持状态" tabindex="-1">3.使用 keep-alive 保持状态 <a class="header-anchor" href="#_3-使用-keep-alive-保持状态" aria-label="Permalink to &quot;3.使用 keep-alive 保持状态&quot;">​</a></h4><p>​</p><p>​ <strong>默认情况下，切换动态组件时无法保持组件的状态。此时可以使用 vue 内置的 组件保持动态组 件的状态。示例代码如下：</strong></p><p>​ <img src="'+g+'" style="zoom:80%;"></p><h4 id="_4-keep-alive-对应的生命周期函数" tabindex="-1">4.keep-alive 对应的生命周期函数 <a class="header-anchor" href="#_4-keep-alive-对应的生命周期函数" aria-label="Permalink to &quot;4.keep-alive 对应的生命周期函数&quot;">​</a></h4><p>​ <strong>当组件被缓存时，会自动触发组件的 deactivated 生命周期函数。</strong></p><p>​ <strong>当组件被激活时，会自动触发组件的 activated 生命周期函数。</strong></p><p>​</p><p>​ <img src="'+o+'" style="zoom:80%;"></p><h4 id="_5-keep-alive-的-include-属性" tabindex="-1">5.keep-alive 的 include 属性 <a class="header-anchor" href="#_5-keep-alive-的-include-属性" aria-label="Permalink to &quot;5.keep-alive 的 include 属性&quot;">​</a></h4><p>​ <strong>include 属性用来指定：只有名称匹配的组件会被缓存。多个组件名之间使用英文的逗号分隔：</strong></p><p>​ <img src="'+c+'" style="zoom:80%;"></p><h4 id="_6-keep-alive中的exclude属性" tabindex="-1">6.keep-alive中的exclude属性 <a class="header-anchor" href="#_6-keep-alive中的exclude属性" aria-label="Permalink to &quot;6.keep-alive中的exclude属性&quot;">​</a></h4><p>​ <strong>exclude属性指定哪些组件不需要被缓存，默认的话所有组件都会被缓存，用法和include一样</strong></p><p>​ <strong>注意：</strong></p><p>​ <strong>exclude属性不能和include属性一起使用</strong></p><h3 id="name属性" tabindex="-1">name属性 <a class="header-anchor" href="#name属性" aria-label="Permalink to &quot;name属性&quot;">​</a></h3><p>​ <strong>如果在“声明组件的时候”，没有为组件指定 name 名称，则组件的名称默认就是“注册时候的名称”</strong></p><p>​ <strong>用法实例：</strong></p><p>​ <img src="'+y+'" style="zoom:80%;"></p><h3 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h3><h4 id="_1-什么是插槽" tabindex="-1">1. 什么是插槽 <a class="header-anchor" href="#_1-什么是插槽" aria-label="Permalink to &quot;1. 什么是插槽&quot;">​</a></h4><p>​ <strong>插槽（Slot）是 vue 为组件的封装者提供的能力。允许开发者在封装组件时，把不确定的、希望由用户指定的 部分定义为插槽。</strong></p><p><img src="'+m+'" alt=""></p><p>​ <strong>可以把插槽认为是组件封装期间，为用户预留的内容的占位符。</strong></p><h4 id="_2-体验插槽的基础用法" tabindex="-1">2.体验插槽的基础用法 <a class="header-anchor" href="#_2-体验插槽的基础用法" aria-label="Permalink to &quot;2.体验插槽的基础用法&quot;">​</a></h4><p>​ <strong>在封装组件时，可以通过 元素定义插槽，从而为用户预留内容占位符。示例代码如下：</strong></p><img src="'+u+'" style="zoom:80%;"><h5 id="_2-1-没有预留插槽的内容会被丢弃" tabindex="-1">2.1 没有预留插槽的内容会被丢弃 <a class="header-anchor" href="#_2-1-没有预留插槽的内容会被丢弃" aria-label="Permalink to &quot;2.1 没有预留插槽的内容会被丢弃&quot;">​</a></h5><p>​</p><p>​ <strong>如果在封装组件时没有预留任何 插槽，则用户提供的任何自定义内容都会被丢弃。示例代码如下：</strong></p><p>​</p><img src="'+b+'" style="zoom:80%;"><h5 id="_2-2-后备内容-默认内容" tabindex="-1">2.2 后备内容(默认内容) <a class="header-anchor" href="#_2-2-后备内容-默认内容" aria-label="Permalink to &quot;2.2 后备内容(默认内容)&quot;">​</a></h5><p>​</p><p>​ <strong>封装组件时，可以为预留的 插槽提供后备内容（默认内容）。如果组件的使用者没有为插槽提供任何 内容，则后备内容会生效。示例代码如下：</strong></p><p>​ <img src="'+F+'" style="zoom:80%;"></p><h4 id="_3-具名插槽" tabindex="-1">3.具名插槽 <a class="header-anchor" href="#_3-具名插槽" aria-label="Permalink to &quot;3.具名插槽&quot;">​</a></h4><p>​ <strong>如果在封装组件时需要预留多个插槽节点，则需要为每个 插槽指定具体的 name 名称。这种带有具体 名称的插槽叫做“具名插槽”。示例代码如下：</strong></p><p>​</p><p>​ <img src="'+B+'" style="zoom:80%;"></p><p>​ <strong>注意：没有指定 name 名称的插槽， 会有隐含的名称叫做 “default”。</strong></p><h5 id="_3-1-为具名插槽提供内容" tabindex="-1">3.1 为具名插槽提供内容 <a class="header-anchor" href="#_3-1-为具名插槽提供内容" aria-label="Permalink to &quot;3.1 为具名插槽提供内容&quot;">​</a></h5><p>​</p><p>​ <strong>在向具名插槽提供内容的时候，我们可以在一个template标签元素上使用 v-slot 指令，并以 v-slot 的参数的 形式提供其名称。示例代码如下：</strong></p><p><img src="'+v+'" alt=""></p><h5 id="_3-2-具名插槽的简写形式" tabindex="-1">3.2 具名插槽的简写形式 <a class="header-anchor" href="#_3-2-具名插槽的简写形式" aria-label="Permalink to &quot;3.2 具名插槽的简写形式&quot;">​</a></h5><p>​ <strong>跟 v-on 和 v-bind 一样，v-slot 也有缩写，即把参数之前的所有内容 (v-slot:) 替换为字符 #。例如 v-slot:header 可以被重写为 #header：</strong></p><img src="'+A+'" style="zoom:80%;"><h4 id="_4-作用域插槽" tabindex="-1">4.作用域插槽 <a class="header-anchor" href="#_4-作用域插槽" aria-label="Permalink to &quot;4.作用域插槽&quot;">​</a></h4><p>​ <strong>在封装组件的过程中，可以为预留的 插槽绑定 props 数据，这种带有 props 数据的 叫做“作用 域插槽”。示例代码如下：</strong></p><img src="'+C+'" style="zoom:80%;"><h5 id="_4-1-使用作用域插槽" tabindex="-1">4.1 使用作用域插槽 <a class="header-anchor" href="#_4-1-使用作用域插槽" aria-label="Permalink to &quot;4.1 使用作用域插槽&quot;">​</a></h5><p>​</p><p>​ <strong>可以使用 v-slot: 的形式，接收作用域插槽对外提供的数据。示例代码如下：</strong></p><p>​</p><p>​ <img src="'+_+'" style="zoom:80%;"></p><h5 id="_4-2-解构插槽-prop" tabindex="-1">4.2 解构插槽 Prop <a class="header-anchor" href="#_4-2-解构插槽-prop" aria-label="Permalink to &quot;4.2 解构插槽 Prop&quot;">​</a></h5><p>​</p><p>​ <strong>作用域插槽对外提供的数据对象，可以使用解构赋值简化数据的接收过程。示例代码如下：</strong></p><img src="'+D+'" style="zoom:80%;"><h3 id="自定义指令" tabindex="-1">自定义指令 <a class="header-anchor" href="#自定义指令" aria-label="Permalink to &quot;自定义指令&quot;">​</a></h3><h4 id="_1-什么是自定义指令" tabindex="-1">1.什么是自定义指令 <a class="header-anchor" href="#_1-什么是自定义指令" aria-label="Permalink to &quot;1.什么是自定义指令&quot;">​</a></h4><p>​ <strong>vue 官方提供了 v-text、v-for、v-model、v-if 等常用的指令。除此之外 vue 还允许开发者自定义指令。</strong></p><h4 id="_2-自定义指令的分类" tabindex="-1">2.自定义指令的分类 <a class="header-anchor" href="#_2-自定义指令的分类" aria-label="Permalink to &quot;2.自定义指令的分类&quot;">​</a></h4><p>​ <strong>vue 中的自定义指令分为两类，分别是：</strong></p><p>​ <strong>⚫ 私有自定义指令</strong></p><p>​</p><p>​ <strong>⚫ 全局自定义指令</strong></p><p>​</p><h4 id="_3-私有自定义指令" tabindex="-1">3.私有自定义指令 <a class="header-anchor" href="#_3-私有自定义指令" aria-label="Permalink to &quot;3.私有自定义指令&quot;">​</a></h4><p>​</p><p>​ <strong>在每个 vue 组件中，可以在 directives 节点下声明私有自定义指令。示例代码如下：</strong></p><p>​ <img src="'+f+'" style="zoom:80%;"></p><h4 id="_4-使用自定义指令" tabindex="-1">4.使用自定义指令 <a class="header-anchor" href="#_4-使用自定义指令" aria-label="Permalink to &quot;4.使用自定义指令&quot;">​</a></h4><p>​ <strong>在使用自定义指令时，需要加上 v- 前缀。示例代码如下：</strong></p><p>​</p><p>​ <img src="'+q+'" style="zoom:80%;"></p><h4 id="_5-为自定义指令动态绑定参数值" tabindex="-1">5.为自定义指令动态绑定参数值 <a class="header-anchor" href="#_5-为自定义指令动态绑定参数值" aria-label="Permalink to &quot;5.为自定义指令动态绑定参数值&quot;">​</a></h4><p>​ <strong>在 template 结构中使用自定义指令时，可以通过等号（=）的方式，为当前指令动态绑定参数值：</strong></p><p>​ <img src="'+x+'" style="zoom:80%;"></p><h4 id="_6-通过-binding-获取指令的参数" tabindex="-1">6.通过 binding 获取指令的参数 <a class="header-anchor" href="#_6-通过-binding-获取指令的参数" aria-label="Permalink to &quot;6.通过 binding 获取指令的参数&quot;">​</a></h4><p>​ <strong>在声明自定义指令时，可以通过形参中的第二个参数，来接收指令的参数值：</strong></p><p>​ <img src="'+P+'" style="zoom:80%;"></p><h4 id="_7-update-函数" tabindex="-1">7.update 函数 <a class="header-anchor" href="#_7-update-函数" aria-label="Permalink to &quot;7.update 函数&quot;">​</a></h4><p>​ <strong>bind 函数只调用 1 次：当指令第一次绑定到元素时调用，当 DOM 更新时 bind 函数不会被触发。 update 函 数会在每次 DOM 更新时被调用。示例代码如下：</strong></p><p>​ <img src="'+I+'" style="zoom:80%;"></p><h4 id="_8-函数简写" tabindex="-1">8.函数简写 <a class="header-anchor" href="#_8-函数简写" aria-label="Permalink to &quot;8.函数简写&quot;">​</a></h4><p>​ <strong>如果 bind 和update 函数中的逻辑完全相同，则对象格式的自定义指令可以简写成函数格式：</strong></p><p>​</p><p>​ <img src="'+z+'" style="zoom:80%;"></p><h4 id="_9-全局自定义指令" tabindex="-1">9.全局自定义指令 <a class="header-anchor" href="#_9-全局自定义指令" aria-label="Permalink to &quot;9.全局自定义指令&quot;">​</a></h4><p>​ <strong>全局共享的自定义指令需要通过“Vue.directive()”进行声明，示例代码如下：</strong></p><p>​ <img src="'+O+'" style="zoom:80%;"></p><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><ul><li>[ ] <strong>① 能够掌握 keep-alive 元素的基本使用 ⚫ 标签、include 属性</strong></li><li>[ ] <strong>② 能够掌握插槽的基本用 ⚫ 标签、具名插槽、作用域插槽、后备内容</strong></li><li>[ ] <strong>③ 能够知道如何自定义指令</strong></li><li>[ ] <strong>⚫ 私有自定义指令 directives: { }</strong></li><li>[ ] <strong>⚫ 全局自定义指令 Vue.directive()</strong></li></ul>',146)]))}const J=i(M,[["render",$]]);export{N as __pageData,J as default};
