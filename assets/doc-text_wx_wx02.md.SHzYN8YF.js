import{_ as p,c as a,a2 as e,o as s}from"./chunks/framework.3VuPyQdv.js";const t="/docs-demo/wxImages/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B5%E9%9D%A2%E7%9A%84%E7%BB%84%E6%88%90%E9%83%A8%E5%88%86.png",n="/docs-demo/wxImages/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E9%A1%B5%E9%9D%A2%E7%9A%84%E7%BB%84%E6%88%90app.json%E6%96%87%E4%BB%B6.png",i="/docs-demo/wxImages/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B5%E9%9D%A2%E7%9A%84%E7%BB%84%E6%88%90%E9%83%A8%E5%88%86sitemap.json%E6%96%87%E4%BB%B6.png",r="/docs-demo/wxImages/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B5%E9%9D%A2%E7%9A%84%E7%BB%84%E6%88%90%E9%83%A8%E5%88%86.json%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png",_=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"doc-text/wx/wx02.md","filePath":"doc-text/wx/wx02.md","lastUpdated":1753350435000}'),c={name:"doc-text/wx/wx02.md"};function m(E,o,d,j,l,B){return s(),a("div",null,o[0]||(o[0]=[e('<h2 id="_2-小程序页面的组成部分" tabindex="-1">2. 小程序页面的组成部分 <a class="header-anchor" href="#_2-小程序页面的组成部分" aria-label="Permalink to &quot;2. 小程序页面的组成部分&quot;">​</a></h2><hr><p>​ <img src="'+t+'" alt="image-20230227214037703" style="zoom:80%;"></p><p>​ 其中，每个页面由 4 个基本文件组成，它们分别是：</p><p>​ ① .js 文件（页面的脚本文件，存放页面的数据、事件处理函数等）</p><p>​ ② .json 文件（当前页面的配置文件，配置窗口的外观、表现等）</p><p>​ ③ .wxml 文件（页面的模板结构文件）</p><p>​ ④ .wxss 文件（当前页面的样式表文件）</p><p>​ ① .js 文件（页面的脚本文件，存放页面的数据、事件处理函数等）</p><p>​ ② .json 文件（当前页面的配置文件，配置窗口的外观、表现等）</p><p>​ ③ .wxml 文件（页面的模板结构文件）</p><p>​ ④ .wxss 文件（当前页面的样式表文件）</p><h3 id="_2-1-json-配置文件的作用" tabindex="-1">2.1 JSON 配置文件的作用 <a class="header-anchor" href="#_2-1-json-配置文件的作用" aria-label="Permalink to &quot;2.1 JSON 配置文件的作用&quot;">​</a></h3><p>​ JSON 是一种数据格式，在实际开发中，JSON 总是以配置文件的形式出现。小程序项目中也不例外：通过不同的 .json 配置文件，可以对小程序项目进行不同级别的配置。</p><p>​ 小程序项目中有 4 种 json 配置文件，分别是：</p><p>​ ①项目根目录中的 app.json 配置文件</p><p>​ ②项目根目录中的 project.config.json 配置文件</p><p>​ ③项目根目录中的 sitemap.json 配置文件</p><p>​ ④每个页面文件夹中的 .json 配置文件</p><h3 id="_2-2-app-json-文件" tabindex="-1">2.2 app.json 文件 <a class="header-anchor" href="#_2-2-app-json-文件" aria-label="Permalink to &quot;2.2 app.json 文件&quot;">​</a></h3><p>​ app.json 是当前小程序的全局配置，包括了小程序的所有页面路径、窗口外观、界面表现、底部 tab 等。Demo 项目里边的 app.json 配置内容如下：</p><img src="'+n+`" style="zoom:67%;"><p>​ 简单了解下这 4 个配置项的作用：</p><p>​ ①pages：用来记录当前小程序所有页面的路径</p><p>​ ②window：全局定义小程序所有页面的背景色、文字颜色等</p><p>​ ③style：全局定义小程序组件所使用的样式版本</p><p>​ sitemapLocation：用来指明 sitemap.json 的位置</p><h3 id="_2-3-project-config-json-文件" tabindex="-1">2.3 project.config.json 文件 <a class="header-anchor" href="#_2-3-project-config-json-文件" aria-label="Permalink to &quot;2.3 project.config.json 文件&quot;">​</a></h3><p>​</p><p>​ project.config.json 是项目配置文件，用来记录我们对小程序开发工具所做的个性化配置，例如：</p><p>​ setting 中保存了编译相关的配置</p><p>​ projectname 中保存的是项目名称</p><pre><code>		appid 中保存的是小程序的账号 ID
</code></pre><h3 id="_2-4-sitemap-json-文件" tabindex="-1">2.4 sitemap.json 文件 <a class="header-anchor" href="#_2-4-sitemap-json-文件" aria-label="Permalink to &quot;2.4 sitemap.json 文件&quot;">​</a></h3><p>​ 微信现已开放小程序内搜索，效果类似于 PC 网页的 SEO。sitemap.json 文件用来配置小程序页面是否允许微信索引。</p><p>​ 当开发者允许微信索引时，微信会通过爬虫的形式，为小程序的页面内容建立索引。当用户的搜索关键字和页面的索引匹配成功 的时候，小程序的页面将可能展示在搜索结果中。</p><p><img src="`+i+'" alt=""></p><blockquote><p>注意：sitemap 的索引提示是默认开启的，如需要关闭 sitemap 的索引提示，可在小程序项目配置文件 project.config.json 的 setting 中配置字段 checkSiteMap 为 false</p></blockquote><h3 id="_2-5-页面的-json-配置文件" tabindex="-1">2.5 页面的.json 配置文件 <a class="header-anchor" href="#_2-5-页面的-json-配置文件" aria-label="Permalink to &quot;2.5 页面的.json 配置文件&quot;">​</a></h3><p>​ 小程序中的每一个页面，可以使用 .json 文件来对本页面的窗口外观进行配置，页面中的配置项会覆盖 app.json 的 window 中相同的配置项。例如：</p><img src="'+r+'" style="zoom:80%;">',41)]))}const x=p(c,[["render",m]]);export{_ as __pageData,x as default};
