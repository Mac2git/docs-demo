import{_ as e,c as t,a2 as o,o as r}from"./chunks/framework.3VuPyQdv.js";const p="/docs-demo/wxImages/%E9%80%9A%E4%BF%A1%E7%9A%84%E4%B8%BB%E9%A2%98.png",s="/docs-demo/wxImages/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E9%80%9A%E4%BF%A1%E6%A8%A1%E5%9E%8B.png",x=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"doc-text/wx/wx06.md","filePath":"doc-text/wx/wx06.md","lastUpdated":1744449209000}'),d={name:"doc-text/wx/wx06.md"};function i(n,a,c,l,m,_){return r(),t("div",null,a[0]||(a[0]=[o('<h2 id="_5-小程序的宿主环境-通信模型" tabindex="-1">5.小程序的宿主环境 - 通信模型 <a class="header-anchor" href="#_5-小程序的宿主环境-通信模型" aria-label="Permalink to &quot;5.小程序的宿主环境 - 通信模型&quot;">​</a></h2><h4 id="_5-1-通信的主体" tabindex="-1">5.1 通信的主体 <a class="header-anchor" href="#_5-1-通信的主体" aria-label="Permalink to &quot;5.1 通信的主体&quot;">​</a></h4><p>​ 小程序中通信的主体是渲染层和逻辑层，其中：</p><p>​ ①WXML 模板和 WXSS 样式工作在渲染层</p><p>​ ②JS 脚本工作在逻辑层</p><p><img src="'+p+'" alt="image-20230301215858674"></p><p>​</p><hr><h4 id="_5-2-小程序的通信模型" tabindex="-1">5.2 小程序的通信模型 <a class="header-anchor" href="#_5-2-小程序的通信模型" aria-label="Permalink to &quot;5.2 小程序的通信模型&quot;">​</a></h4><p>​ 小程序中的通信模型分为两部分：</p><p>​ ① 渲染层和逻辑层之间的通信</p><p>​ 由微信客户端进行转发</p><p>​ ② 逻辑层和第三方服务器之间的通信</p><p>​ 由微信客户端进行转发</p><img src="'+s+'" alt="image-20230301220003481" style="zoom:80%;">',15)]))}const E=e(d,[["render",i]]);export{x as __pageData,E as default};
