import{_ as e,c as t,a2 as p,o}from"./chunks/framework.3VuPyQdv.js";const x=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"doc-text/wx/wx07.md","filePath":"doc-text/wx/wx07.md","lastUpdated":1754641226000}'),r={name:"doc-text/wx/wx07.md"};function s(n,a,d,i,l,c){return o(),t("div",null,a[0]||(a[0]=[p('<h2 id="_6-小程序的宿主环境-运行机制" tabindex="-1">6.小程序的宿主环境 - 运行机制 <a class="header-anchor" href="#_6-小程序的宿主环境-运行机制" aria-label="Permalink to &quot;6.小程序的宿主环境 - 运行机制&quot;">​</a></h2><h4 id="_6-1-小程序启动的过程" tabindex="-1">6.1 小程序启动的过程 <a class="header-anchor" href="#_6-1-小程序启动的过程" aria-label="Permalink to &quot;6.1 小程序启动的过程&quot;">​</a></h4><p>​ ①把小程序的代码包下载到本地</p><p>​ ②解析 app.json 全局配置文件</p><p>​ ③执行 app.js 小程序入口文件，调用 App() 创建小程序实例</p><p>​ ④渲染小程序首页</p><p>​ ⑤小程序启动完成</p><hr><h4 id="_6-2-页面渲染的过程" tabindex="-1">6.2 页面渲染的过程 <a class="header-anchor" href="#_6-2-页面渲染的过程" aria-label="Permalink to &quot;6.2 页面渲染的过程&quot;">​</a></h4><p>​ ①加载解析页面的 .json 配置文件</p><p>​ ②加载页面的 .wxml 模板和 .wxss 样式</p><p>​ ③执行页面的 .js 文件，调用 Page() 创建页面实例</p><p>​ ④页面渲染完成</p>',13)]))}const _=e(r,[["render",s]]);export{x as __pageData,_ as default};
