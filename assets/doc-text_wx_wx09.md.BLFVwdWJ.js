import{_ as e,c as t,a2 as p,o}from"./chunks/framework.3VuPyQdv.js";const P=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"doc-text/wx/wx09.md","filePath":"doc-text/wx/wx09.md","lastUpdated":1743335057000}'),r={name:"doc-text/wx/wx09.md"};function i(s,a,n,c,l,d){return o(),t("div",null,a[0]||(a[0]=[p('<h2 id="_8-小程序的宿主环境-api" tabindex="-1">8. 小程序的宿主环境 - API <a class="header-anchor" href="#_8-小程序的宿主环境-api" aria-label="Permalink to &quot;8. 小程序的宿主环境 - API&quot;">​</a></h2><h4 id="_8-1-小程序-api-概述" tabindex="-1">8.1 小程序 API 概述 <a class="header-anchor" href="#_8-1-小程序-api-概述" aria-label="Permalink to &quot;8.1 小程序 API 概述&quot;">​</a></h4><p>​ 小程序中的 API 是由宿主环境提供的，通过这些丰富的小程序 API，开发者可以方便的调用微信提供的能力，例如：获取用户信息、本地存储、支付功能等。</p><hr><h4 id="_8-2-小程序-api-的-3-大分类" tabindex="-1">8.2 小程序 API 的 3 大分类 <a class="header-anchor" href="#_8-2-小程序-api-的-3-大分类" aria-label="Permalink to &quot;8.2 小程序 API 的 3 大分类&quot;">​</a></h4><p>​ 小程序官方把 API 分为了如下 3 大类：</p><p>​ ①事件监听 API</p><p>​ 特点：以 on 开头，用来监听某些事件的触发</p><p>​ 举例：wx.onWindowResize(function callback) 监听窗口尺寸变化的事件</p><p>​ ②同步 API</p><p>​ 特点1：以 Sync 结尾的 API 都是同步 API</p><p>​ 特点2：同步 API 的执行结果，可以通过函数返回值直接获取，如果执行出错会抛出异常</p><p>​ 举例：wx.setStorageSync(&#39;key&#39;, &#39;value&#39;) 向本地存储中写入内容</p><p>​ ③异步 API</p><p>​ 特点：类似于 jQuery 中的 $.ajax(options) 函数，需要通过 success、fail、complete 接收调用的结果</p><p>​ 举例：wx.request() 发起网络数据请求，通过 success 回调函数接收数据</p>',16)]))}const h=e(r,[["render",i]]);export{P as __pageData,h as default};
