import{_ as a,c as d,a2 as o,o as r}from"./chunks/framework.3VuPyQdv.js";const e="/docs-demo/wxImages/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%AA%97%E5%8F%A3%E7%9A%84%E7%BB%84%E6%88%90%E9%83%A8%E5%88%86.png",i="/docs-demo/wxImages/%E8%AE%BE%E7%BD%AE%E5%AF%BC%E8%88%AA%E6%A0%8F%E7%9A%84%E6%A0%87%E9%A2%98.png",n="/docs-demo/wxImages/%E8%AE%BE%E7%BD%AE%E5%AF%BC%E8%88%AA%E7%9A%84%E8%83%8C%E6%99%AF%E8%89%B2.png",l="/docs-demo/wxImages/%E8%AE%BE%E7%BD%AE%E5%AF%BC%E8%88%AA%E7%9A%84%E6%A0%87%E9%A2%98%E9%A2%9C%E8%89%B2.png",p="/docs-demo/wxImages/%E8%AE%BE%E7%BD%AE%E4%B8%8B%E6%8B%89%E5%88%B7%E6%96%B0%E6%97%B6%E7%AA%97%E5%8F%A3%E7%9A%84%E8%83%8C%E6%99%AF%E9%A2%9C%E8%89%B2.png",h="/docs-demo/wxImages/%E8%AE%BE%E7%BD%AE%E4%B8%8B%E6%8B%89%E5%88%B7%E6%96%B0%E6%97%B6loading%E7%9A%84%E6%A0%B7%E5%BC%8F.png",s="/docs-demo/wxImages/%E5%BA%95%E9%83%A8tabbar1.png",b="/docs-demo/wxImages/%E5%BA%95%E9%83%A8tabbar2.png",c="/docs-demo/wxImages/tabbar6%E4%B8%AA%E7%BB%84%E6%88%90%E9%83%A8%E5%88%86.png",u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"doc-text/wx/wx20.md","filePath":"doc-text/wx/wx20.md","lastUpdated":1743779231000}'),g={name:"doc-text/wx/wx20.md"};function m(E,t,B,_,x,w){return r(),d("div",null,t[0]||(t[0]=[o('<h2 id="_19-全局配置" tabindex="-1">19.全局配置 <a class="header-anchor" href="#_19-全局配置" aria-label="Permalink to &quot;19.全局配置&quot;">​</a></h2><h5 id="_19-1全局配置文件及常用的配置项" tabindex="-1">19.1全局配置文件及常用的配置项 <a class="header-anchor" href="#_19-1全局配置文件及常用的配置项" aria-label="Permalink to &quot;19.1全局配置文件及常用的配置项&quot;">​</a></h5><p>​ 小程序根目录下的 app.json 文件是小程序的全局配置文件。常用的配置项如下：</p><p>​ ① pages</p><p>​ 记录当前小程序所有页面的存放路径</p><p>​ ② window</p><p>​ 全局设置小程序窗口的外观</p><p>​ ③ tabBar</p><p>​ 设置小程序底部的 tabBar 效果</p><p>​ ④ style</p><p>​ 是否启用新版的组件样式</p><hr><h4 id="_19-2-全局配置-window" tabindex="-1">19.2 全局配置 - window <a class="header-anchor" href="#_19-2-全局配置-window" aria-label="Permalink to &quot;19.2 全局配置 - window&quot;">​</a></h4><h5 id="_19-2-小程序窗口的组成部分" tabindex="-1">19.2 小程序窗口的组成部分 <a class="header-anchor" href="#_19-2-小程序窗口的组成部分" aria-label="Permalink to &quot;19.2 小程序窗口的组成部分&quot;">​</a></h5><p>​ <img src="'+e+'" alt="image-20230308193431138" style="zoom:67%;"></p><hr><h5 id="_19-3-了解-window-节点常用的配置项" tabindex="-1">19.3 了解 window 节点常用的配置项 <a class="header-anchor" href="#_19-3-了解-window-节点常用的配置项" aria-label="Permalink to &quot;19.3 了解 window 节点常用的配置项&quot;">​</a></h5><table tabindex="0"><thead><tr><th>属性名</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>navigationBarTitleText</td><td>String</td><td>字符串</td><td>导航栏标题文字内容</td></tr><tr><td>navigationBarBackgroundColor</td><td>HexColor</td><td>#000000</td><td>导航栏背景颜色，如 #000000</td></tr><tr><td>navigationBarTextStyle</td><td>String</td><td>white</td><td>导航栏标题颜色，仅支持 black / white</td></tr><tr><td>backgroundColor</td><td>HexColor</td><td>#ffffff</td><td>窗口的背景色</td></tr><tr><td>backgroundTextStyle</td><td>String</td><td>dark</td><td>下拉 loading 的样式，仅支持 dark / light</td></tr><tr><td>enablePullDownRefresh</td><td>Boolean</td><td>false</td><td>是否全局开启下拉刷新</td></tr><tr><td>onReachBottomDistance</td><td>Number</td><td>50</td><td>页面上拉触底事件触发时距页面底部距离，单位为px</td></tr></tbody></table><hr><h5 id="_19-4-设置导航栏的标题" tabindex="-1">19.4 设置导航栏的标题 <a class="header-anchor" href="#_19-4-设置导航栏的标题" aria-label="Permalink to &quot;19.4 设置导航栏的标题&quot;">​</a></h5><p>​ 设置步骤：app.json -&gt; window -&gt; navigationBarTitleText</p><p>​ 需求：把导航栏上的标题，从默认的 “WeChat”修改为“黑马程序员”，效果如图所示：</p><p>​ <img src="'+i+'" alt="image-20230308193636662" style="zoom:67%;"></p><hr><h5 id="_19-5-设置导航栏的背景色" tabindex="-1">19.5 设置导航栏的背景色 <a class="header-anchor" href="#_19-5-设置导航栏的背景色" aria-label="Permalink to &quot;19.5 设置导航栏的背景色&quot;">​</a></h5><p>​ 设置步骤：app.json -&gt; window -&gt; navigationBarBackgroundColor</p><p>​ 需求：把导航栏标题的背景色，从默认的 #fff 修改为 #2b4b6b ，效果如图所示：</p><img src="'+n+'" alt="image-20230308193748093" style="zoom:67%;"><hr><h5 id="_19-6-设置导航栏的标题颜色" tabindex="-1">19.6 设置导航栏的标题颜色 <a class="header-anchor" href="#_19-6-设置导航栏的标题颜色" aria-label="Permalink to &quot;19.6 设置导航栏的标题颜色&quot;">​</a></h5><p>​ 设置步骤：app.json -&gt; window -&gt; navigationBarTextStyle</p><p>​ 需求：把导航栏上的标题颜色，从默认的 black 修改为 white ，效果如图所示：</p><p>​</p><p>​ <img src="'+l+'" alt="image-20230308193901437" style="zoom:67%;"></p><hr><h5 id="_19-7-全局开启下拉刷新功能" tabindex="-1">19.7 全局开启下拉刷新功能 <a class="header-anchor" href="#_19-7-全局开启下拉刷新功能" aria-label="Permalink to &quot;19.7 全局开启下拉刷新功能&quot;">​</a></h5><p>​ 概念：下拉刷新是移动端的专有名词，指的是通过手指在屏幕上的下拉滑动操作，从而重新加载页面数据的行为。</p><p>​ 设置步骤：app.json -&gt; window -&gt; 把 enablePullDownRefresh 的值设置为 true</p><p>​ 注意：在 app.json 中启用下拉刷新功能，会作用于每个小程序页面！</p><hr><h5 id="_19-8-设置下拉刷新时窗口的背景色" tabindex="-1">19.8 设置下拉刷新时窗口的背景色 <a class="header-anchor" href="#_19-8-设置下拉刷新时窗口的背景色" aria-label="Permalink to &quot;19.8 设置下拉刷新时窗口的背景色&quot;">​</a></h5><p>​ 当全局开启下拉刷新功能之后，默认的窗口背景为白色。如果自定义下拉刷新窗口背景色，设置步骤为: app.json -&gt; window -&gt; 为 backgroundColor 指定16进制的颜色值 #efefef。效果如下：</p><p>​ <img src="'+p+'" alt="image-20230308194105848" style="zoom:67%;"></p><hr><h5 id="_19-9-设置下拉刷新时-loading-的样式" tabindex="-1">19.9 设置下拉刷新时 loading 的样式 <a class="header-anchor" href="#_19-9-设置下拉刷新时-loading-的样式" aria-label="Permalink to &quot;19.9 设置下拉刷新时 loading 的样式&quot;">​</a></h5><p>​ 当全局开启下拉刷新功能之后，默认窗口的 loading 样式为白色，如果要更改 loading 样式的效果，设置步骤为 app.json -&gt; window -&gt; 为 backgroundTextStyle 指定 dark 值。效果如下：</p><p>​ <img src="'+h+'" alt="image-20230308194314310" style="zoom:67%;"></p><hr><p>​</p><h5 id="_19-10-设置上拉触底的距离" tabindex="-1">19.10 设置上拉触底的距离 <a class="header-anchor" href="#_19-10-设置上拉触底的距离" aria-label="Permalink to &quot;19.10 设置上拉触底的距离&quot;">​</a></h5><p>​ 概念：上拉触底是移动端的专有名词，通过手指在屏幕上的上拉滑动操作，从而加载更多数据的行为。</p><p>​ 设置步骤： app.json -&gt; window -&gt; 为 onReachBottomDistance 设置新的数值</p><p>​ 注意：默认距离为50px，如果没有特殊需求，建议使用默认值即可。</p><hr><h4 id="_19-11-全局配置-tabbar" tabindex="-1">19.11 全局配置 - tabBar <a class="header-anchor" href="#_19-11-全局配置-tabbar" aria-label="Permalink to &quot;19.11 全局配置 - tabBar&quot;">​</a></h4><h5 id="_19-12-什么是-tabbar" tabindex="-1">19.12 什么是 tabBar <a class="header-anchor" href="#_19-12-什么是-tabbar" aria-label="Permalink to &quot;19.12 什么是 tabBar&quot;">​</a></h5><p>​ tabBar 是移动端应用常见的页面效果，用于实现多页面的快速切换。小程序中通常将其分为：</p><p>​ 底部 tabBar</p><p>​ 顶部 tabBar</p><p>​ 注意：</p><p>​ tabBar中只能配置最少 2 个、最多 5 个 tab 页签</p><p>​ 当渲染顶部 tabBar 时，不显示 icon，只显示文本</p><p>​ <img src="'+s+'" alt="image-20230308195059646" style="zoom:50%;"><img src="'+b+'" alt="image-20230308195114366" style="zoom:50%;"></p><hr><h5 id="_19-13-tabbar-的-6-个组成部分" tabindex="-1">19.13 tabBar 的 6 个组成部分 <a class="header-anchor" href="#_19-13-tabbar-的-6-个组成部分" aria-label="Permalink to &quot;19.13 tabBar 的 6 个组成部分&quot;">​</a></h5><p>​ ① backgroundColor：tabBar 的背景色</p><p>​ ② selectedIconPath：选中时的图片路径</p><p>​ ③ borderStyle：tabBar 上边框的颜色</p><p>​ ④ iconPath：未选中时的图片路径</p><p>​ ⑤ selectedColor：tab 上的文字选中时的颜色</p><p>​ ⑥ color：tab 上文字的默认（未选中）颜色</p><img src="'+c+'" alt="image-20230308195447426" style="zoom:67%;"><hr><p>​ 19.14 tabBar 节点的配置项</p><table tabindex="0"><thead><tr><th>属性</th><th>类型</th><th>必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>position</td><td>String</td><td>否</td><td>bottom</td><td>tabBar 的位置，仅支持 bottom/top</td></tr><tr><td>borderStyle</td><td>String</td><td>否</td><td>black</td><td>tabBar 上边框的颜色，仅支持 black/white</td></tr><tr><td>color</td><td>HexColor</td><td>否</td><td></td><td>tab 上文字的默认（未选中）颜色</td></tr><tr><td>selectedColor</td><td>HexColor</td><td>否</td><td></td><td>tab 上的文字选中时的颜色</td></tr><tr><td>backgroundColor</td><td>HexColor</td><td>否</td><td></td><td>tabBar 的背景色</td></tr><tr><td>list</td><td>Array</td><td>是</td><td></td><td>tab 页签的列表， 最少 2 个、最多 5 个 tab</td></tr></tbody></table><hr><h5 id="_19-15-每个-tab-项的配置选项" tabindex="-1">19.15 每个 tab 项的配置选项 <a class="header-anchor" href="#_19-15-每个-tab-项的配置选项" aria-label="Permalink to &quot;19.15 每个 tab 项的配置选项&quot;">​</a></h5><table tabindex="0"><thead><tr><th>属性</th><th>类型</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td>pagePath</td><td>String</td><td>是</td><td>页面路径，页面必须在 pages 中预先定义</td></tr><tr><td>text</td><td>String</td><td>是</td><td>tab 上显示的文字</td></tr><tr><td>iconPath</td><td>String</td><td>否</td><td>未选中时的图标路径；当 postion 为 top 时，不显示 icon</td></tr><tr><td>selectedIconPath</td><td>String</td><td>否</td><td>选中时的图标路径；当 postion 为 top 时，不显示 icon</td></tr></tbody></table>',78)]))}const f=a(g,[["render",m]]);export{u as __pageData,f as default};
