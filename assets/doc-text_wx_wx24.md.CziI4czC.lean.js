import{_ as e,c as t,a2 as o,o as p}from"./chunks/framework.3VuPyQdv.js";const r="/docs-demo/wxImages/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9A%84%E5%88%86%E7%B1%BB.png",s="/docs-demo/wxImages/%E5%BA%94%E7%94%A8%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%87%BD%E6%95%B0.png",i="/docs-demo/wxImages/%E9%A1%B5%E9%9D%A2%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%87%BD%E6%95%B0.png",g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"doc-text/wx/wx24.md","filePath":"doc-text/wx/wx24.md","lastUpdated":1751538763000}'),l={name:"doc-text/wx/wx24.md"};function d(n,a,h,c,m,_){return p(),t("div",null,a[0]||(a[0]=[o('<h2 id="_23-生命周期" tabindex="-1">23.生命周期 <a class="header-anchor" href="#_23-生命周期" aria-label="Permalink to &quot;23.生命周期&quot;">​</a></h2><hr><h4 id="_1-什么是生命周期" tabindex="-1">1. 什么是生命周期 <a class="header-anchor" href="#_1-什么是生命周期" aria-label="Permalink to &quot;1. 什么是生命周期&quot;">​</a></h4><p>​ 生命周期（Life Cycle）是指一个对象从创建 -&gt; 运行 -&gt; 销毁的整个阶段，强调的是一个时间段。例如：</p><p>​ 张三出生，表示这个人生命周期的开始</p><p>​ 张三离世，表示这个人生命周期的结束</p><p>​ 中间张三的一生，就是张三的生命周期</p><p>​ 我们可以把每个小程序运行的过程，也概括为生命周期：</p><p>​ 小程序的启动，表示生命周期的开始</p><p>​ 小程序的关闭，表示生命周期的结束</p><p>​ 中间小程序运行的过程，就是小程序的生命周期</p><hr><h4 id="_2-生命周期的分类" tabindex="-1">2. 生命周期的分类 <a class="header-anchor" href="#_2-生命周期的分类" aria-label="Permalink to &quot;2. 生命周期的分类&quot;">​</a></h4><p>​ 在小程序中，生命周期分为两类，分别是：</p><p>​ ① 应用生命周期</p><p>​ 特指小程序从启动 -&gt; 运行 -&gt; 销毁的过程</p><p>​ ② 页面生命周期</p><p>​ 特指小程序中，每个页面的加载 -&gt; 渲染 -&gt; 销毁的过程</p><p>​ 其中，页面的生命周期范围较小，应用程序的生命周期范围较大，如图所示：</p><img src="'+r+'" alt="image-20230311230803004" style="zoom:67%;"><hr><h4 id="_3-什么是生命周期函数" tabindex="-1">3. 什么是生命周期函数 <a class="header-anchor" href="#_3-什么是生命周期函数" aria-label="Permalink to &quot;3. 什么是生命周期函数&quot;">​</a></h4><p>​ 生命周期函数：是由小程序框架提供的内置函数，会伴随着生命周期，自动按次序执行。</p><p>​ 生命周期函数的作用：允许程序员在特定的时间点，执行某些特定的操作。例如，页面刚加载的时候，可以在 onLoad 生命周期函数中初始化页面的数据。</p><blockquote><p>​ 注意：生命周期强调的是时间段，生命周期函数强调的是时间点。</p></blockquote><hr><h4 id="_4-生命周期函数的分类" tabindex="-1">4. 生命周期函数的分类 <a class="header-anchor" href="#_4-生命周期函数的分类" aria-label="Permalink to &quot;4. 生命周期函数的分类&quot;">​</a></h4><p>​ 小程序中的生命周期函数分为两类，分别是：</p><p>​ ① 应用的生命周期函数</p><p>​ 特指小程序从启动 -&gt; 运行 -&gt; 销毁期间依次调用的那些函数</p><p>​ ② 页面的生命周期函数</p><p>​ 特指小程序中，每个页面从加载 -&gt; 渲染 -&gt; 销毁期间依次调用的那些函数</p><hr><h4 id="_5-应用的生命周期函数" tabindex="-1">5. 应用的生命周期函数 <a class="header-anchor" href="#_5-应用的生命周期函数" aria-label="Permalink to &quot;5. 应用的生命周期函数&quot;">​</a></h4><p>​ 小程序的应用生命周期函数需要在 app.js 中进行声明，示例代码如下：</p><p>​ <img src="'+s+'" alt="image-20230311230957224" style="zoom:50%;"></p><hr><h4 id="_6-页面的生命周期函数" tabindex="-1">6. 页面的生命周期函数 <a class="header-anchor" href="#_6-页面的生命周期函数" aria-label="Permalink to &quot;6. 页面的生命周期函数&quot;">​</a></h4><p>​ 小程序的页面生命周期函数需要在页面的 .js 文件中进行声明，示例代码如下：</p><p>​ <img src="'+i+'" alt="image-20230311231043067" style="zoom:50%;"></p>',40)]))}const x=e(l,[["render",d]]);export{g as __pageData,x as default};
